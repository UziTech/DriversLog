<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        OgBcRz0AXkk/AGFKQABkTEIAZ05DAGxPRABwUUUAcFFGAHBSSABwUkkAblNKAG5USwBuVUwAb1ZNAHBX
        TwB0WVEAdVtTAHZcVABzXlYAel9XAHtgVwB7YVgAemFYAHpjWgB4Y1wAd2ReAHdmYQB2Z2MAdWllAHBq
        bgBlboEAWXKYAFJ2qQBPeLMAT3u9AFJ+xQBRgcwAUoLOAFSE0ABXh9EAXYvTAF6IygBmh7wAa4exAG6F
        qQBzgZkAeH2NAHt8hQB+en0Afnh2AH12cgB9dXIAfHRxAHx0cQCAdG4Ag3NsAIpyaACQcWUAlnFjAJtx
        YgCedGMAo3ZlAKd3ZACreWUArnplALF6ZAC0e2QAtn5nALmAaAC6gmoAvIRrAL2GbQC+h28AvolxAL6L
        dADBj3cAxJJ5AMWUewDFln4AxpmCAMSbhQDDnIcAxJ+JAMagigDJoIoAzaCJAM+fhwDTnYQA1ZyDANWa
        ggDVmX8A1Zd9ANWWewDWlHcA15BxANiNaQDaimIA24ZbAN2DVADkhVIA6oZQAO+HTQDyi1AA845TAPOR
        WAD0lV0A9ZhiAPacZwD1nmsA9KBxAPKhdgDwo3oA66J+AOeiggDlooQA5KKFAOSkhwDjpYgA4qeKAOOp
        jADjqo0A46yOAOStjwDlsJEA5rGRAOexkgDrsZIA77OTAPGylADzs5UA9LSVAPa1lgD4t5YA+bmXAPm7
        mAD5vJkA972aAPW9mwDzvZwA772dAOy8nQDpvJ8A5rygAOW7nwDjuqAA4LmgANu3nwDTtaAAzrShAMu1
        owDOuKYA0r6uAN7DrgDkx64A6MmvAOvJrgDuya0A8cmrAPPJqwD0yKsA9ciqAPfHqgD6xqcA/MWkAPzE
        pQD8xKYA/MepAPzJrAD8y68A/MywAPzNsQD7z7AA+9GwAPvSsAD707AA+9SxAPvVswD81rQA/Ne1APvX
        tgD717gA+ta5APnXugD317sA9Na8APPWvADz174A9tfAAPfZwQD32sIA+N7CAPriwgD65MMA+ufFAPro
        xgD668gA+e7MAPrwzwD68dQA+vTYAPrz3AD69OAA////APrz5gD58ucADw8PDw8PLUhHSkVFPw8PDw8P
        Dw8PDw8PDw8PDw8PDw8PDw8PDw99iqiRdW5ARWpFLTQPDw8PDw8PDw8PDw8PDw8PDw8Pa47b3NbW17Wj
        dG5ua1BPRQ8PDw8PDw8PDw8PDw8PDw9Kj9TU17J2d7XXuaqQdW5ARWpBDw8PDw8PDw8PDw8PD0uP29TW
        d6Sjddmyco7W17WidHFkLA8PDw8PDw8PDw8PRozb2teA5NariniOkX/efni4un1jDw8PDw8PDw8PDw9E
        pdva14jx9+yQiODZjo13jne8qWQPDw8PDw8PDw8PD0Om29rXvYbKgruB/PPFedvWpayqZA8PDw8PDw8P
        Dw8PRKbd3te7rIvX1rLH7Iu4yfnMra1lDw8PDw8PDw8PDw9Dpe7e2n9zd3jZ3nyA2daIx4a9sGUPDw8P
        Dw8PDw8PD0Gk7t7afdnXj7F6dnWM2qyLvdmwZQ8PDw8PDw8PDw8PQ6fu3dmG8+PpfYLXu5CwcZF3vsNl
        Dw8PDw8PDw8PDw8/qO7d1bDK98axh/jyw3vQ2autwmUPDw8PDw8PDw8PD0Kr797V2r+usN6oy/uCrsv1
        za3BZg8PDw8PDw8PDw8PPrTv6NXCcXSw3+WKfd/hiOzGv8FmDw8PDw8PDw8PDw8/tPHo4HiOo3XiqW50
        wN/Wh9bfwWgPDw8PDw8PDw8PDz628enfg/Dg1Y1+t7h82lNUVM/BTw8PDw8PDw8PDw8PPrfx6eGI+/Xw
        gsfn38CEV1tXyM9nDw8PDw8PDw8PDw89t/vo37/G7YPlgvv6xcdbylte1WcPDw8PDw8PDw8PDzy6/Oje
        4NCw0eDSh4aw5V3KW8jPZw8PDw8PDw8PDw8PPNf76N7h39Hk5ebm5ePkzl/I581PDw8PDw8PDw8PDw88
        2Pzo4MGCiYmCgKrA5fDx8ufnzE8PDw8PDw8PDw8PDzza/+rlerq6u9bWtqmAgICKwOfOTw8PDw8PDw8P
        Dw8POdr/8MCSoqKiorOzt7q617qLwc5PDw8PDw8PDw8PDw852//v0JWcnZ2enZ6foKCgoqJ87E8PDw8P
        Dw8PDw8PDznb/+ryd5iYmZmampqbnJycnpTtZw8PDw8PDw8PDw8PO93/6ubjgJWWlpWVl5iYmJiYku1k
        Dw8PDw8PDw8PDw853f/p4+bnzsHDxMKujZKVlXfs7GMPDw8PDw8PDw8PD0j+///59/b29vLz8vLz8/T0
        9PLOYw8PDw8PDw8PDw8Pbfj+/vz6+vr7+/r5+Pj49vXz9exiDw8PDw8PDw8PDw8Pb0psbNHf5fLy8vX1
        9vX2+Pj4zUwPDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PcMXGxswPDw8PDw8PD/wH///8AD//+AAH//gA
        AP/4AAA/+AAAP/gAAD/4AAA/+AAAP/gAAD/4AAA/+AAAP/gAAD/4AAA/+AAAP/gAAD/4AAA/+AAAP/gA
        AD/4AAA/+AAAP/gAAD/4AAA/+AAAP/gAAD/4AAA/+AAAP/gAAD/4AAA/+AAAP/wAAD///+D/KAAAADAA
        AABgAAAAAQAIAAAAAACACgAAAAAAAAAAAAAAAAAAAAAAAAAAAACura4A//LzAGtpaQBtbGwA/+rmAP/j
        3ACiaFgA65yFAIFVSQDdmIQA452JAJdpXAD0rZkA/97VAIp4cwDTiXMAy4VvALd4ZQC5fGgA4JV+AKtz
        YQDVkn0A2JWBAM2OegDBhXMAs35tAPKqlAC3gXAA3JyJAK18bACxf3AAr39wAPq2oQB9W1EA/bqlAPKy
        ngD1tqIA9rilAIhmWwD+vqsAroN1APa7qACwh3oA/8WyAIBiWQD4wK4A/8m4ALSOggD/z8AA/9LEAP/V
        yACZgHgAiXVvALF3YwDypIoA+62SALyCbQCkcWAAx4x2AK15ZwDopY4AuoVyAPm0mwDMl4QAsIp8AItt
        YwCsiHsAqoZ6AKaDdwCigXYA/8y7AJ2BdwD+2s4AdW9tAGpnZgDCg2sA/rOWAMKLdQD/uJsA/7mdAOqs
        kwDCkX0AvIx5AO2xmgC/lIMAyqSUALqYiwDNqpwA1bSnAL9+YQDPj3EA9rKTAL2JcgDRmX8AzJR8ANOb
        gwDFknoAwI53AP+9nwD6upwAx5R8ANykigDFknwAx5Z/AM2bhADJnosA/8qzAP/NtgDHoI8AwJ+RAPLL
        ugDdv7EA/4VGAP2FSAD/ik0A8YJLAO+CSwD+jVIA5YJSANaCWgDXimQAw31cAN+TbAD/wKEA1J+GAMGR
        egD9waIA97yfAOqylgDfqo8A/8OlAP7CpADjr5QA06OLAMGVfwDbq5QA/9C5AP/SvAD/1cAAdXNyAP/9
        /AD/kVcA/5ZdAP+ZYwD/nWgA/6FtAP+ldAD/qnoA/q6BANiihQDzupwA/8WmAPjAoQD/xqcA/8aoAP/H
        qQD/yaoA/sipAOu5nQDTq5YAzqiTAMijjwD/2MMA/9zIAP+1iQD/u5MA/7+YAP/CnAD/xaAA/8ekAPnF
        pgD/yqsA/8usAPPCpAD/zK0A/82uAOK1mgD/zq8A6ryhAP/PsQD9za8A9MapAP/UuQD/1rwA69TGAP/J
        pgD/0LEA+cyuAP/RswD/0rMA/9O0AP3RsgDYs5oA8MmvAPPMswDy0boA5MezAMq2qQD/1LMA/9S1AP/V
        tgD4z7IA68WpAP/WuQD/17oA+NK1AP/ZvgD/3sUA57+eAP/WtgD/2bkA/9m6AP/auwD/3cEA/9y8AP/d
        vgD/4skA/+HEAPnVrgD/4cIA/+7cAPfr3gD/6M0A/9+2AP/mxgD/6coA9+XKAP/lvAD/68oA/+7SAPjo
        ywD35sUA/+7NAP/twwD98tgA//jkAP/zzAD/9tEA//jWAP/62gCDnKsAV4mvAKPR/wA9b6YAnqWtAIy0
        +ABnju8Aa2trAGhoaABlZWUAYWFhAF1dXQBaWloAWVlZAAAAAAD/////////////Qi0tQjVK/v36////
        //////////////////////////////////////////////9CIgw6DAkiJ0I1Sv7++v//////////////
        //////////////////////////////86HSYhXDcUTAcJIidCNUr+/vr/////////////////////////
        /////////////zAZGyxrg3xjTzg3FEwHCSInQjVK/v76/////////////////////////////////zAZ
        DS9rmHx8fGRkY084NxRMBwkiJ0I1Sv7++v///////////////////////////zAZDS9rmHx8Gjo6E2N8
        fGNPODcUTAcJIidCNUv+/////////////////////////zA7DS9rmIReGggIEBN8fGNfGD9jT003FBEH
        CScP/v///////////////////////zA7P0dsmIQ5JGNQTRFRfDw6FRU9fHxjY09NNxQeS/n/////////
        /////////////0EYP0dsm4NOSb2vnYEWZjkbOAgSY3xOFTY9Y2M9NPn//////////////////////0EY
        PzFsm4NmcN/Y18NeXoibhGMWC2YVFhASUXxcNPn//////////////////////ysYITFsm5iEU97r5qBR
        ZlnWx7ufYE5mT003OXw/NPn//////////////////////ysYITJsnJiYl1OhaWmDf1Ps4eFwZmdvsp2Y
        GXxkNPn//////////////////////0EYITKJnJqamJiXgJiYmIJt6+dTmYJZ2dfWZ3+ASPn/////////
        /////////////ysWIzOJnZuaXTo6OYSYmJiBYWWXmIRT3ubmU4ODSPn//////////////////////ysW
        IzOJnZx9PAoIETmamoRiXYGamJiXU2pTgZiYRvn//////////////////////ykWIzOJrJw+VFBQTRGB
        mjw6EjZgmpqagJeYmpqbRvn//////////////////////ysXI0mKrJ1TSbStrVRegj44ODcTmZscOhU5
        mJudRgT//////////////////////ysXKEmKrZ1pudnX2MRpYIicmIQ9YIIaCDcQO5ytRvj/////////
        /////////////ykXKEmKrayZVezm5sGFglnQ0szDQGWFfGNPOZ6vRgT//////////////////////ykK
        KA6Kr62thVXFwVKsnlPs4uLFhmDFybu/aZe0Rvj//////////////////////ysKLA6Kr62trauCga2t
        rYVt6+hTq59W5tzfaq60Rfn//////////////////////ykLLA6LsK+vgjw8Zq+vr6+faGiur69ouevj
        U7C9Rfn//////////////////////ykLLA6LsrCxOhkQE1+wsK9pZ5+wsLCtaYd+rrK/Rfn/////////
        /////////////ykLLAaLsrA+HU1NOEyusBo6NjZ9srKyxsa1tLS3RPr//////////////////////ykL
        LwaLtLI+MaydnVF9nxwbODg5rrTy9PT0xb23Rfr//////////////////////yk9LwaLtLtSBdbT18Rp
        hoicmJtRYMb09/f39L24Rfr//////////////////////yk9RwaLu7uCcOzi38WIiFnW0s2kaPH39/f3
        8nC4RPv//////////////////////yk9RwWju7u7Urns6FO1vFXs4eK5hvX39vb29wG4RPv/////////
        /////////////yA9MQWjvb6+tIaHaLa+voZZ7OmHtsXy8/b28sbPRPv//////////////////////yBR
        MQWjvb6+vr6+vr6+vr+Ih36zv8jx9vP28rejQ/v//////////////////////yAbMgWjvr6+vr6+v7+/
        v7/IyMjIyMnJ8fLyxczWQ/z//////////////////////x8bMgWjvr+/vrOxrsDIyMjIyMnJybfMzMzN
        zc3WQ/z//////////////////////x8NMwWjv7+2XX2CYH5iYmJpiLO8zMzMzc3NuM/QQ/z/////////
        /////////////x8NMwKkv8hdXKeoqKmquqqXhZZoYmJiZYjKz8/QQf7//////////////////////x8k
        SQKkyK5blaWlpaWlpqamp6eoqaqqmYFisc/QQf7//////////////////////xokSQKkyIV7k5OTlJSU
        lJWVlaWlpaWmpqanTsLQQf7//////////////////////xokSQKkyZ95kJCRkZGSkpKSk5OTlJSUlZWV
        lWHQMP3//////////////////////xolDgKk0slajo6Ojo+Pj4+QkJCRkZGSkpKTk0zZMPv/////////
        /////////////xolDgKk0tOWeHJzc3NzdnZ2do6Ojo+Pj4+QkEzZMPv//////////////////////xwm
        DgKk0tPTXnp3dXJxcXFxcXNzc3NzdnZ2djvZV/v//////////////////////xwqBgKkzNPT08qCXjtM
        TFpaenh4d3RycXFyWsLZVwP//////////////////////xkuBo3Z1NXU1NTU1NXV1dXXzsuxZl5OTExM
        y9DZVwP//////////////////////0AGAo0C5uni4eHc3NzY2NfX2NjY2NjW1tbW0NDZVwT/////////
        /////////////2rd7I2N7Ozw8PDv7+7m6enl4uHh4dra2tra2trZboz//////////////////////1az
        7uzw7u7v7+/w8PDw8O/v7+/u7u7t7enl5eLiboz///////////////////////9WVqGgwbHRy9vg5Orq
        6urt7e3t7e7u7u7u7u3tQYz///////////////////////////////9ZWVlZWFhWoqKhoMGx0a7b4OTk
        5OSijP///////////////////////////////////////////////////1hYWFhYVlj/////////////
        ////wB////8AAP+AAf///wAA/4AAH///AAD/AAAB//8AAP8AAAAf/wAA/wAAAAf/AAD/AAAAA/8AAP8A
        AAAB/wAA/wAAAAH/AAD/AAAAAf8AAP8AAAAB/wAA/wAAAAH/AAD/AAAAAf8AAP8AAAAB/wAA/wAAAAH/
        AAD/AAAAAf8AAP8AAAAB/wAA/wAAAAH/AAD/AAAAAf8AAP8AAAAB/wAA/wAAAAH/AAD/AAAAAf8AAP8A
        AAAB/wAA/wAAAAH/AAD/AAAAAf8AAP8AAAAB/wAA/wAAAAH/AAD/AAAAAf8AAP8AAAAB/wAA/wAAAAH/
        AAD/AAAAAf8AAP8AAAAB/wAA/wAAAAH/AAD/AAAAAf8AAP8AAAAB/wAA/wAAAAH/AAD/AAAAAf8AAP8A
        AAAB/wAA/wAAAAH/AAD/AAAAAf8AAP8AAAAB/wAA/wAAAAH/AAD/AAAAAf8AAP8AAAAB/wAA/wAAAAH/
        AAD/gAAAAf8AAP/+AAAD/wAA////+A//AAA=
</value>
  </data>
</root>